sudo: required
dist: trusty
cache:
  timeout: 1000
  directories:
    - $HOME/.cache/pip
    - $HOME/miniconda
addons:
  postgresql: "9.5"
  apt:
    packages:
      - postgresql-9.5-postgis-2.3
  hosts:
    - iemdb
env:
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.6
language: python
python:
  - "2.7"
before_install:
  - sudo add-apt-repository ppa:ubuntugis/ppa -y
  - sudo apt-get update -qq
install:
  # Install miniconda
  # -----------------
  - if [[ "$PYTHON_VERSION" == 2* ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda-3.7.0-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-3.7.0-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls yes
  - conda update conda
  - conda create -n test-environment python=$PYTHON_VERSION
  - source activate test-environment
  
  
  # Customise the testing environment
  # ---------------------------------
  - conda config --add channels conda-forge
  - PACKAGES="$PACKAGES cython nose pytest Shapely coveralls pandas gdata cartopy"
  - PACKAGES="$PACKAGES psycopg2 geojson"
  - conda install --quiet $PACKAGES
  
  # Install pyIEM
  # ---------------
  - pip install --no-deps .

before_script:
  - psql -c 'create database postgis;' -U postgres
  - psql -c 'create user nobody;' -U postgres
  - psql -c 'create user apache;' -U postgres
  - psql -c 'create database portfolio;' -U postgres
  - psql -c 'create database iem;' -U postgres
  - psql -c 'create database mesosite;' -U postgres
  - psql -c 'create database asos;' -U postgres
  - psql -c 'create database hads;' -U postgres
  - psql -c 'create database mos;' -U postgres
  - psql -U postgres -f data/schema/iem.sql iem
  - psql -U postgres -f data/schema/postgis.sql postgis
  - psql -U postgres -f data/schema/portfolio.sql portfolio
  - psql -U postgres -f data/schema/mesosite.sql mesosite
  - psql -U postgres -f data/schema/asos.sql asos
  - psql -U postgres -f data/schema/hads.sql hads
  - psql -U postgres -f data/schema/mos.sql mos

script:
  - if [[ "$PYTHON_VERSION" == 2* ]]; then
      coverage run --source=pyiem setup.py test
    fi

after_success:
  - if [[ "$PYTHON_VERSION" == 2* ]]; then
      coveralls
    fi
